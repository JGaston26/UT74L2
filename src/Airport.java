import java.util.ArrayList;
import java.util.Arrays;

public class Airport  {
    /** A list of the flights into and out of this airport
     *  Guaranteed not to be null and to contain only non-null entries
     */
    private ArrayList<Flight> allFlights;

    public Airport(ArrayList<Flight> flights) {
        allFlights = flights;
    }

    public ArrayList<Flight> getAllFlights() {
        return allFlights;
    }

    /** Returns the revenue generated by all flights at the airport,
     *  as described in part (a)
     */
    public double getTotalRevenue() {
        int revenune = 0;
        for(int i = 0; i < allFlights.size();i++){
            if(allFlights.get(i).getNumPassengers() > allFlights.get(i).getCapacity()){
                revenune += allFlights.get(i).getPrice() * allFlights.get(i).getCapacity();
            }else{
                revenune += allFlights.get(i).getPrice() * allFlights.get(i).getNumPassengers();
            }
        }
        return revenune;
    }

    /** Updates the list of flights by removing certain flights and
     *  returns the total number of passengers whose flights were removed,
     *  as described in part (b)
     */
    public int updateFlights() {
        int count = 0;
        ArrayList<Flight> flights = getAllFlights();
        for(int i = 0; i < flights.size(); i++){
            if(flights.get(i).getNumPassengers() < (flights.get(i).getCapacity() * .20)){
                count += flights.get(i).getNumPassengers();
                flights.remove(i);
                i--;
            }
        }
        return count;
    }
}